name: Check

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

jobs:
  limit-pr-per-author:
    name: Limit number of open PRs by author
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      # must keep this extra checkout step until this bug is fixed: https://github.com/actions/checkout/issues/692
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check PR Limit
        uses: lucaslim/pull-request-limiter-action@main
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          limit: 2
          auto_close: false
          body: |
            Hello **@{{ pull_request.user.login }}**

            You currently have too many opened Pull Requests. Please close this and reopen it once you have less than 3 opened Pull Requests.
            For more information, please refer to our [Pull Request Checklist](https://einc.atlassian.net/l/cp/d84EDpzo). 

            Or you could also...
            - Ask a repository administators to bypass this check.
            - See if any of your open Pull Requests can be improved.
            - Ask reviewers to review your opened Pull Requests.
            - Review Pull Requests from other developers.
            - Improve our documentation.
  ensure-labels:
    name: Ensure PR has a category label
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Find repository labels
        uses: actions/github-script@v6
        id: get_category_labels
        with:
          script: |
            const owner = context.payload.organization.login;
            const repo = context.payload.repository.name;
            const labels = await github.rest.issues.listLabelsForRepo({ owner, repo });
            return labels.data.map(l => l.name).filter(l => l.startsWith('category/')).join();
          result-encoding: string
      - uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          any_of: ${{ steps.get_category_labels.outputs.result }}
          none_of: merge/blocked
