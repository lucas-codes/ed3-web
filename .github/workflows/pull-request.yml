# name: Check

# on:
#   pull_request:
# jobs:
# pr-limit:
#   name: PR Limit Check
#   runs-on: ubuntu-latest
#   if: |
#     github.event.pull_request.draft == false && (
#       github.event.action == 'opened' ||
#       github.event.action == 'reopened' ||
#       github.event.action == 'ready_for_review'
#     )
#   steps:
#     # must keep this extra checkout step until this bug is fixed: https://github.com/actions/checkout/issues/692
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Check PR Limit
#       uses: lucaslim/pull-request-limiter-action@main
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         limit: 3
#         auto_close: false
#         body: |
#           Hello @${{ github.actor }}

#           You currently have too many opened Pull Requests. Please close this and reopen it once you have less than 3.

#           **For more information, please refer to our [Pull Request Guidelines](https://einc.atlassian.net/l/cp/d84EDpzo).**

#           **Or you could also...**
#           - Ask a repository administrators to bypass this check.
#           - See if any of your open Pull Requests can be improved.
#           - Ask reviewers to review your opened Pull Requests.
#           - Review Pull Requests from other developers.
#           - Improve our documentation.

# ensure-labels:
#   name: Ensure PR has a category label
#   runs-on: ubuntu-latest
#   if: |
#     github.event.pull_request.draft == false && (
#       github.event.action == 'labeled' ||
#       github.event.action == 'unlabeled'
#     )
#   steps:
#     - name: Find repository labels
#       uses: actions/github-script@v6
#       id: get_category_labels
#       with:
#         script: |
#           const owner = context.payload.organization.login;
#           const repo = context.payload.repository.name;
#           const labels = await github.rest.issues.listLabelsForRepo({ owner, repo });
#           return labels.data.map(l => l.name).filter(l => l.startsWith('category/')).join();
#         result-encoding: string
#     - uses: docker://agilepathway/pull-request-label-checker:latest
#       with:
#         repo_token: ${{ secrets.GITHUB_TOKEN }}
#         any_of: ${{ steps.get_category_labels.outputs.result }}
#         none_of: merge/blocked

# auto-assign-assignees:
#   name: Add Assignees
#   runs-on: ubuntu-latest
#   if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'ready_for_review'
#   steps:
#     - uses: toshimaru/auto-author-assign@v1.6.1
#       with:
#         repo-token: ${{ secrets.GITHUB_TOKEN }}

# notify-labels:
#   name: Notify users based on PR labels
#   runs-on: ubuntu-latest
#   if: github.event.action == 'labeled'
#   steps:
#     - uses: MichaelPhan/issue-label-notification-action@master
#       with:
#         recipients: |
#           Ready to Merge=@joelray @jns0987654321
#           High Priority=@jns0987654321 @tyllrb @mpeblock @lucaslim

#Pull Request title "${title}" failed to pass match regex - ${regex}

# ensure-pr-title:
#   name: Ensure PR title is the right format
#   runs-on: ubuntu-latest
#   permissions:
#     issues: write
#     pull-requests: write
#   if: |
#     github.event.action == 'opened' ||
#     github.event.action == 'reopened' ||
#     github.event.action == 'edited'
#   steps:
#     - uses: actions/github-script@v6
#       id: pr-title
#       with:
#         script: |
#           const title = context.payload.pull_request.title;
#           const regex = RegExp(/^(Revert \"(.*)\")|(Packages - \w.*)|((\[hotfix\]|\[ED-\d{4,5}\])\s((\w|\s)*\s\-)\s\w.*)$/);

#           if (!regex.test(title)) {
#             core.setFailed(`Pull Request title "${title}" failed to pass match regex - ${regex}`)
#           }

#     - if: ${{ always() }}
#       uses: lucaslim/find-comment@main
#       id: fc
#       with:
#         issue-number: ${{ github.event.pull_request.number }}
#         comment-author: "github-actions[bot]"
#         body-includes: The pull request title does match the current guideline
#         direction: last

#     - if: ${{ failure() }}
#       uses: peter-evans/create-or-update-comment@v2
#       with:
#         comment-id: ${{ steps.fc.outputs.comment-id }}
#         issue-number: ${{ github.event.pull_request.number }}
#         body: |
#           Hello @${{ github.actor }}

#           The pull request title does match the current guideline: `[Ticket Number] Section/Component - Descriptive title`

#           **For more information, please refer to our [Pull Request Naming Guidelines][1].**

#           [1]: https://einc.atlassian.net/wiki/spaces/ED/pages/936640525/Pull+Requests#Naming`
#         edit-mode: replace

#     - if: ${{ success() && steps.fc.outputs.comment-node-id != '' }}
#       continue-on-error: true
#       uses: actions/github-script@v6
#       with:
#         script: |
#           const mutation = `
#             mutation minimizeComment($id: ID!) {
#                 minimizeComment(input: { classifier: RESOLVED, subjectId: $id }) {
#                     clientMutationId
#                 }
#             }`;

#           const variables = { id: '${{ steps.fc.outputs.comment-node-id }}' };
#           await github.graphql(mutation, variables);
